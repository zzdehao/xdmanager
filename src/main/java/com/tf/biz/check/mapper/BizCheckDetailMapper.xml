<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tf.biz.check.mapper.BizCheckDetailMapper">
  <resultMap id="BaseResultMap" type="com.tf.biz.check.entity.BizCheckDetail">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="plan_id" jdbcType="BIGINT" property="planId" />
    <result column="store_id" jdbcType="BIGINT" property="storeId" />
    <result column="store_name" jdbcType="VARCHAR" property="storeName" />
    <result column="store_address" jdbcType="VARCHAR" property="storeAddress" />
    <result column="check_time" jdbcType="TIMESTAMP" property="checkTime" />
    <result column="check_user_id" jdbcType="BIGINT" property="checkUserId" />
    <result column="check_user_name" jdbcType="VARCHAR" property="checkUserName" />
    <result column="check_longitude" jdbcType="VARCHAR" property="checkLongitude" />
    <result column="check_latitude" jdbcType="VARCHAR" property="checkLatitude" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, plan_id, store_id, store_name, store_address, check_time, check_user_id, check_user_name, 
    check_longitude, check_latitude, create_time, status
  </sql>
  <select id="selectByExample" parameterType="com.tf.biz.check.entity.BizCheckDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from biz_check_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${limit} offset ${offset}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from biz_check_detail
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from biz_check_detail
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.tf.biz.check.entity.BizCheckDetailExample">
    delete from biz_check_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.tf.biz.check.entity.BizCheckDetail" useGeneratedKeys="true">
    insert into biz_check_detail (plan_id, store_id, store_name, 
      store_address, check_time, check_user_id, 
      check_user_name, check_longitude, check_latitude, 
      create_time, status)
    values (#{planId,jdbcType=BIGINT}, #{storeId,jdbcType=BIGINT}, #{storeName,jdbcType=VARCHAR}, 
      #{storeAddress,jdbcType=VARCHAR}, #{checkTime,jdbcType=TIMESTAMP}, #{checkUserId,jdbcType=BIGINT}, 
      #{checkUserName,jdbcType=VARCHAR}, #{checkLongitude,jdbcType=VARCHAR}, #{checkLatitude,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.tf.biz.check.entity.BizCheckDetail" useGeneratedKeys="true">
    insert into biz_check_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="planId != null">
        plan_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="storeName != null">
        store_name,
      </if>
      <if test="storeAddress != null">
        store_address,
      </if>
      <if test="checkTime != null">
        check_time,
      </if>
      <if test="checkUserId != null">
        check_user_id,
      </if>
      <if test="checkUserName != null">
        check_user_name,
      </if>
      <if test="checkLongitude != null">
        check_longitude,
      </if>
      <if test="checkLatitude != null">
        check_latitude,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="planId != null">
        #{planId,jdbcType=BIGINT},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=BIGINT},
      </if>
      <if test="storeName != null">
        #{storeName,jdbcType=VARCHAR},
      </if>
      <if test="storeAddress != null">
        #{storeAddress,jdbcType=VARCHAR},
      </if>
      <if test="checkTime != null">
        #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkUserId != null">
        #{checkUserId,jdbcType=BIGINT},
      </if>
      <if test="checkUserName != null">
        #{checkUserName,jdbcType=VARCHAR},
      </if>
      <if test="checkLongitude != null">
        #{checkLongitude,jdbcType=VARCHAR},
      </if>
      <if test="checkLatitude != null">
        #{checkLatitude,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tf.biz.check.entity.BizCheckDetailExample" resultType="java.lang.Long">
    select count(*) from biz_check_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update biz_check_detail
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.planId != null">
        plan_id = #{record.planId,jdbcType=BIGINT},
      </if>
      <if test="record.storeId != null">
        store_id = #{record.storeId,jdbcType=BIGINT},
      </if>
      <if test="record.storeName != null">
        store_name = #{record.storeName,jdbcType=VARCHAR},
      </if>
      <if test="record.storeAddress != null">
        store_address = #{record.storeAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.checkTime != null">
        check_time = #{record.checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.checkUserId != null">
        check_user_id = #{record.checkUserId,jdbcType=BIGINT},
      </if>
      <if test="record.checkUserName != null">
        check_user_name = #{record.checkUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.checkLongitude != null">
        check_longitude = #{record.checkLongitude,jdbcType=VARCHAR},
      </if>
      <if test="record.checkLatitude != null">
        check_latitude = #{record.checkLatitude,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update biz_check_detail
    set id = #{record.id,jdbcType=BIGINT},
      plan_id = #{record.planId,jdbcType=BIGINT},
      store_id = #{record.storeId,jdbcType=BIGINT},
      store_name = #{record.storeName,jdbcType=VARCHAR},
      store_address = #{record.storeAddress,jdbcType=VARCHAR},
      check_time = #{record.checkTime,jdbcType=TIMESTAMP},
      check_user_id = #{record.checkUserId,jdbcType=BIGINT},
      check_user_name = #{record.checkUserName,jdbcType=VARCHAR},
      check_longitude = #{record.checkLongitude,jdbcType=VARCHAR},
      check_latitude = #{record.checkLatitude,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tf.biz.check.entity.BizCheckDetail">
    update biz_check_detail
    <set>
      <if test="planId != null">
        plan_id = #{planId,jdbcType=BIGINT},
      </if>
      <if test="storeId != null">
        store_id = #{storeId,jdbcType=BIGINT},
      </if>
      <if test="storeName != null">
        store_name = #{storeName,jdbcType=VARCHAR},
      </if>
      <if test="storeAddress != null">
        store_address = #{storeAddress,jdbcType=VARCHAR},
      </if>
      <if test="checkTime != null">
        check_time = #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkUserId != null">
        check_user_id = #{checkUserId,jdbcType=BIGINT},
      </if>
      <if test="checkUserName != null">
        check_user_name = #{checkUserName,jdbcType=VARCHAR},
      </if>
      <if test="checkLongitude != null">
        check_longitude = #{checkLongitude,jdbcType=VARCHAR},
      </if>
      <if test="checkLatitude != null">
        check_latitude = #{checkLatitude,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tf.biz.check.entity.BizCheckDetail">
    update biz_check_detail
    set plan_id = #{planId,jdbcType=BIGINT},
      store_id = #{storeId,jdbcType=BIGINT},
      store_name = #{storeName,jdbcType=VARCHAR},
      store_address = #{storeAddress,jdbcType=VARCHAR},
      check_time = #{checkTime,jdbcType=TIMESTAMP},
      check_user_id = #{checkUserId,jdbcType=BIGINT},
      check_user_name = #{checkUserName,jdbcType=VARCHAR},
      check_longitude = #{checkLongitude,jdbcType=VARCHAR},
      check_latitude = #{checkLatitude,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>